"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
These are more direct client-created workflows for client -> server -> worker"""

import builtins
import collections.abc
import custom_struct.v1_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import serialized_graph.v1_pb2
import sys
import typing
import workflow.v1_pb2

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _JobStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _JobStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_JobStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    QUEUED: _JobStatus.ValueType  # 0
    EXECUTING: _JobStatus.ValueType  # 1
    COMPLETED: _JobStatus.ValueType  # 2
    ERROR: _JobStatus.ValueType  # 3
    ABORTED: _JobStatus.ValueType  # 4

class JobStatus(_JobStatus, metaclass=_JobStatusEnumTypeWrapper):
    """======= General Types ========"""

QUEUED: JobStatus.ValueType  # 0
EXECUTING: JobStatus.ValueType  # 1
COMPLETED: JobStatus.ValueType  # 2
ERROR: JobStatus.ValueType  # 3
ABORTED: JobStatus.ValueType  # 4
global___JobStatus = JobStatus

@typing.final
class LocalFile(google.protobuf.message.Message):
    """It would be helpful to have blake3 hashes rather than filenames"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    MIME_TYPE_FIELD_NUMBER: builtins.int
    name: builtins.str
    path: builtins.str
    size: builtins.int
    """in bytes"""
    mime_type: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        path: builtins.str = ...,
        size: builtins.int = ...,
        mime_type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["mime_type", b"mime_type", "name", b"name", "path", b"path", "size", b"size"]) -> None: ...

global___LocalFile = LocalFile

@typing.final
class LocalFiles(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADDED_FIELD_NUMBER: builtins.int
    UPDATED_FIELD_NUMBER: builtins.int
    REMOVED_FIELD_NUMBER: builtins.int
    @property
    def added(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LocalFile]: ...
    @property
    def updated(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LocalFile]: ...
    @property
    def removed(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LocalFile]: ...
    def __init__(
        self,
        *,
        added: collections.abc.Iterable[global___LocalFile] | None = ...,
        updated: collections.abc.Iterable[global___LocalFile] | None = ...,
        removed: collections.abc.Iterable[global___LocalFile] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["added", b"added", "removed", b"removed", "updated", b"updated"]) -> None: ...

global___LocalFiles = LocalFiles

@typing.final
class JobId(google.protobuf.message.Message):
    """======= Unary Request Types ========"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    JOB_ID_FIELD_NUMBER: builtins.int
    job_id: builtins.str
    def __init__(
        self,
        *,
        job_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["job_id", b"job_id"]) -> None: ...

global___JobId = JobId

@typing.final
class ComfyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_FIELD_NUMBER: builtins.int
    SERIALIZED_GRAPH_FIELD_NUMBER: builtins.int
    WEBHOOK_URL_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    """This is a client-supplied identifier; it allows the client to associate responses
    or multiple requests with the same identifier. Useful for webhook callbacks.
    """
    webhook_url: builtins.str
    @property
    def workflow(self) -> workflow.v1_pb2.Workflow:
        """keys are node_ids"""

    @property
    def serialized_graph(self) -> serialized_graph.v1_pb2.SerializedGraph:
        """Included in the file metadata if supplied"""

    def __init__(
        self,
        *,
        request_id: builtins.str | None = ...,
        workflow: workflow.v1_pb2.Workflow | None = ...,
        serialized_graph: serialized_graph.v1_pb2.SerializedGraph | None = ...,
        webhook_url: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_request_id", b"_request_id", "_serialized_graph", b"_serialized_graph", "_webhook_url", b"_webhook_url", "request_id", b"request_id", "serialized_graph", b"serialized_graph", "webhook_url", b"webhook_url", "workflow", b"workflow"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_request_id", b"_request_id", "_serialized_graph", b"_serialized_graph", "_webhook_url", b"_webhook_url", "request_id", b"request_id", "serialized_graph", b"serialized_graph", "webhook_url", b"webhook_url", "workflow", b"workflow"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_request_id", b"_request_id"]) -> typing.Literal["request_id"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_serialized_graph", b"_serialized_graph"]) -> typing.Literal["serialized_graph"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_webhook_url", b"_webhook_url"]) -> typing.Literal["webhook_url"] | None: ...

global___ComfyRequest = ComfyRequest

@typing.final
class JobSnapshot(google.protobuf.message.Message):
    """======= Unary Response Types ========

    This is published to pulsar as a cumulative message; it contains all prior msg info
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Metrics(google.protobuf.message.Message):
        """Metrics are cumulative for the entire job"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        QUEUE_SECONDS_FIELD_NUMBER: builtins.int
        EXECUTION_SECONDS_FIELD_NUMBER: builtins.int
        queue_seconds: builtins.int
        execution_seconds: builtins.int
        def __init__(
            self,
            *,
            queue_seconds: builtins.int = ...,
            execution_seconds: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["execution_seconds", b"execution_seconds", "queue_seconds", b"queue_seconds"]) -> None: ...

    JOB_ID_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    OUTPUTS_FIELD_NUMBER: builtins.int
    METRICS_FIELD_NUMBER: builtins.int
    job_id: builtins.str
    request_id: builtins.str
    status: global___JobStatus.ValueType
    @property
    def outputs(self) -> custom_struct.v1_pb2.CustomStruct: ...
    @property
    def metrics(self) -> global___JobSnapshot.Metrics: ...
    def __init__(
        self,
        *,
        job_id: builtins.str = ...,
        request_id: builtins.str | None = ...,
        status: global___JobStatus.ValueType = ...,
        outputs: custom_struct.v1_pb2.CustomStruct | None = ...,
        metrics: global___JobSnapshot.Metrics | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_metrics", b"_metrics", "_request_id", b"_request_id", "metrics", b"metrics", "outputs", b"outputs", "request_id", b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_metrics", b"_metrics", "_request_id", b"_request_id", "job_id", b"job_id", "metrics", b"metrics", "outputs", b"outputs", "request_id", b"request_id", "status", b"status"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_metrics", b"_metrics"]) -> typing.Literal["metrics"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_request_id", b"_request_id"]) -> typing.Literal["request_id"] | None: ...

global___JobSnapshot = JobSnapshot

@typing.final
class OutputDiff(google.protobuf.message.Message):
    """======= Stream Response Types ========

    These are Yjs encoded diffs modifying the output object
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DIFF_FIELD_NUMBER: builtins.int
    diff: builtins.bytes
    def __init__(
        self,
        *,
        diff: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["diff", b"diff"]) -> None: ...

global___OutputDiff = OutputDiff

@typing.final
class Models(google.protobuf.message.Message):
    """====== Model Info Messages ======"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Info(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        BLAKE3_HASH_FIELD_NUMBER: builtins.int
        DISPLAY_NAME_FIELD_NUMBER: builtins.int
        blake3_hash: builtins.str
        """unique identifier; same as civitai"""
        display_name: builtins.str
        def __init__(
            self,
            *,
            blake3_hash: builtins.str = ...,
            display_name: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["blake3_hash", b"blake3_hash", "display_name", b"display_name"]) -> None: ...

    INFO_FIELD_NUMBER: builtins.int
    @property
    def info(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Models.Info]: ...
    def __init__(
        self,
        *,
        info: collections.abc.Iterable[global___Models.Info] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["info", b"info"]) -> None: ...

global___Models = Models

@typing.final
class ModelCatalog(google.protobuf.message.Message):
    """Maps base-family to model"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class ModelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___Models: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Models | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    MODELS_FIELD_NUMBER: builtins.int
    @property
    def models(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___Models]: ...
    def __init__(
        self,
        *,
        models: collections.abc.Mapping[builtins.str, global___Models] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["models", b"models"]) -> None: ...

global___ModelCatalog = ModelCatalog

@typing.final
class ModelCatalogRequest(google.protobuf.message.Message):
    """Leave blank to retrieve all models"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BASE_FAMILY_FIELD_NUMBER: builtins.int
    @property
    def base_family(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        base_family: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["base_family", b"base_family"]) -> None: ...

global___ModelCatalogRequest = ModelCatalogRequest
